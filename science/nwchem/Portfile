# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           github 1.0
PortGroup           compilers 1.0
PortGroup           mpi 1.0
PortGroup           makefile 1.0
PortGroup           compiler_blacklist_versions 1.0

github.setup        nwchemgit nwchem 7.2.3 v -release
revision            0

# Using this tarball avoids the need for the make 64_to_32 step
github.tarball_from tarball
# Version of included Global Arrays (GA) sources
# Needs to be checked and updated with an update of nwchem
set ga_version      5.8.2
checksums           rmd160  38b29b7232254d6669dc6eb9fadf18b5295f34fe \
                    sha256  a0f76f12ae2f634d33e76409cd389787e6c458cc2cf05ed453538de2d47a23a5 \
                    size    234392394
master_sites        https://github.com/nwchemgit/${name}/releases/download/v${version}-release
set nwc_hash        d690e065
set nwc_date        2024-08-27
distname            ${name}-${version}-release.revision-${nwc_hash}-src.${nwc_date}
worksrcdir          ${name}-${version}
supported_archs     x86_64 arm64
categories          science physics chemistry
license             ECL-2.0
maintainers         {reneeotten @reneeotten} \
                    {@kamischi web.de:karl-michael.schindler} \
                    openmaintainer
description         Open Source High-Performance Computational Chemistry
long_description    The NWChem software contains computational chemistry tools \
                    that are scalable both in their ability to efficiently \
                    treat large scientific problems, and in their use of \
                    available computing resources from high-performance parallel \
                    supercomputers to conventional workstation clusters.
homepage            https://nwchemgit.github.io

# Apple clang does not support openmp
compiler.blacklist  clang
compilers.choose    fc cc
compiler.c_standard 2011
mpi.setup           require require_fortran -g95 -clang
compiler.require_fortran \
                    yes
compilers.allow_arguments_mismatch \
                    yes

patchfiles          makefile_noinstall.patch

post-patch {
    reinplace   "s|/etc/nwchemrc|${prefix}/etc/nwchemrc|g" \
                ${worksrcpath}/src/util/util_nwchemrc.F
}

depends_build-append \
                    path:bin/pkg-config:pkgconfig

depends_lib-append  port:hwloc \
                    port:python313 \
                    path:lib/libopenblas.dylib:OpenBLAS \
                    port:libxc6 \
                    port:[mpi_variant_name]-${compilers.gcc_default}

depends_lib-append  port:scalapack
mpi.enforce_variant scalapack

universal_variant   no

set MPI_DIR         [mpi_variant_name]-${compilers.gcc_default}
set MPI_INCLUDE     "-I${prefix}/include/${MPI_DIR} -I${prefix}/lib/${MPI_DIR}"
set MPI_LIB         "-L${prefix}/lib/${MPI_DIR}"
if {[variant_isset mpich] || [variant_isset mpich_devel]} {
    set LIBMPI      "-lmpifort -lmpi -lpmpi"
} elseif {[variant_isset openmpi] || [variant_isset openmpi_devel]} {
    set LIBMPI      "-lmpi_usempif08 -lmpi_usempi_ignore_tkr -lmpi_mpifh -lmpi"
}

configure.dir       ${worksrcpath}/src
configure.env-append \
                    NWCHEM_TARGET=MACX64 \
                    NWCHEM_TOP=${worksrcpath} \
                    "NWCHEM_MODULES=all python" \
                    PYTHONVERSION=3.13 \
                    "BLASOPT=-L${prefix}/lib -lopenblas" \
                    "LAPACK_LIB=-L${prefix}/lib -lopenblas" \
                    BLAS_SIZE=4 \
                    USE_SCALAPACK=y \
                    SCALAPACK_SIZE=4 \
                    USE_64TO32=y \
                    USE_HWOPT=n \
                    USE_MPI=y \
                    OPENBLAS_USES_OPENMP=y \
                    LIBXC_LIB=${prefix}/libexec/libxc6/lib \
                    LIBXC_INCLUDE=${prefix}/libexec/libxc6/include \
                    CCSDTQ=TRUE \
                    IPCCSD=y \
                    EACCSD=y \
                    MRCC_METHODS=TRUE \
                    NO_NWPWXC_VDW3A=y \
                    FORCE_MPI_ENV=y \
                    MPI_INCLUDE=${MPI_INCLUDE} \
                    MPI_LIB=${MPI_LIB} \
                    LIBMPI=${LIBMPI}

platform darwin {
  if {${os.major} < 23} {
    configure.env-append \
                    "SCALAPACK_LIB=-L${prefix}/lib/ -lscalapack"
  } else {
    configure.env-append \
                    "SCALAPACK_LIB=-Wl,-ld_classic -L${prefix}/lib/ -lscalapack"
  }
}
configure.cmd       make nwchem_config
configure.pre_args
configure.args-append \
                    FFLAG_INT="-fdefault-integer-8"

post-configure {
# Note: Global Arrays (GA) need autoreconf for the creation of Makefile.in.
# Without it, GA sources are downloaded again.
    system "echo ''"
    system "echo '*** autoreconf in src/tools/ga-${ga_version} start ***'"
    system "echo ''"
    system -W ${workpath}/${name}-${version}/src/tools/ga-${ga_version} "autoreconf -vif"
    system "echo ''"
    system "echo '*** autoreconf in src/tools/ga-${ga_version} end ***'"
    system "echo ''"
}

build.dir           ${configure.dir}
build.args-append   FFLAG_INT="-fdefault-integer-8" \
                    CFLAGS_FORGA="-fPIC -Wl,-rpath,${prefix}/lib/libgcc -L${prefix}/lib/libgcc"
build.target
build.post_args     FC=${configure.fc} \
                    F77=${configure.f77} \
                    F90=${configure.f90} \
                    CC=${configure.cc}
build.env           {*}${configure.env}

variant native description {Enable CPU-specific optimizations} {
    configure.env-replace   USE_HWOPT=n USE_HWOPT=1
    build.env-replace       USE_HWOPT=n USE_HWOPT=1
}

variant openmp description {Enable OpenMP parallelism} {
    configure.env-append    USE_OPENMP=1
    build.env-append        USE_OPENMP=1
}

test.run            yes
# note: a few QA tests
test {
    system -W ${worksrcpath}/QA "MPIRUN_PATH=${prefix}/bin/mpirun-[mpi_variant_name]-${p_name}  ./runtests.mpi.unix procs 2 libxc_li2freq dft_he2+ cosmo_h2o_dft h2o_opt ritddft_h2o h2o-response"
}

destroot.dir        ${configure.dir}
destroot {
    set share ${prefix}/share
    set bin ${prefix}/bin
    set etc ${prefix}/etc
    xinstall -m 755 ${worksrcpath}/bin/MACX64/nwchem ${destroot}${bin}
    xinstall -d ${destroot}${share}/nwchem
    xinstall -d ${destroot}${share}/nwchem/libraries
    xinstall -d ${destroot}${share}/nwchem/libraries.bse
    xinstall -d ${destroot}${share}/nwchem/libraries/rel-modelpotentials
    xinstall -m 644  {*}[glob ${worksrcpath}/src/basis/libraries/rel-modelpotentials/*] ${destroot}${share}/nwchem/libraries/rel-modelpotentials
    delete ${worksrcpath}/src/basis/libraries/rel-modelpotentials
    xinstall -m 644  {*}[glob ${worksrcpath}/src/basis/libraries/*] ${destroot}${share}/nwchem/libraries
    xinstall -m 644  {*}[glob ${worksrcpath}/src/basis/libraries.bse/*] ${destroot}${share}/nwchem/libraries.bse
    xinstall -d ${destroot}${share}/nwchem/libraryps
    xinstall -d ${destroot}${share}/nwchem/libraryps/library1
    xinstall -d ${destroot}${share}/nwchem/libraryps/library2
    xinstall -d ${destroot}${share}/nwchem/libraryps/pspw_default
    xinstall -d ${destroot}${share}/nwchem/libraryps/paw_default
    delete ${worksrcpath}/src/nwpw/libraryps/paw_default/JUNK
    xinstall -m 644 {*}[glob ${worksrcpath}/src/nwpw/libraryps/library1/*] ${destroot}${share}/nwchem/libraryps/library1
    xinstall -m 644 {*}[glob ${worksrcpath}/src/nwpw/libraryps/library2/*] ${destroot}${share}/nwchem/libraryps/library2
    xinstall -m 644 {*}[glob ${worksrcpath}/src/nwpw/libraryps/pspw_default/*] ${destroot}${share}/nwchem/libraryps/pspw_default
    xinstall -d ${destroot}${share}/nwchem/amber_s
    xinstall -m 644 {*}[glob ${worksrcpath}/src/data/amber_s/*] ${destroot}${share}/nwchem/amber_s
    xinstall -d ${destroot}${share}/nwchem/amber_q
    xinstall -d ${destroot}${share}/nwchem/amber_q/lps_Pa
    xinstall -d ${destroot}${share}/nwchem/amber_q/lps_ec
    xinstall -m 644 {*}[glob ${worksrcpath}/src/data/amber_q//lps_Pa/*] ${destroot}${share}/nwchem/amber_q/lps_Pa
    xinstall -m 644 {*}[glob ${worksrcpath}/src/data/amber_q//lps_ec/*] ${destroot}${share}/nwchem/amber_q/lps_ec
    delete ${worksrcpath}/src/data/amber_q/lps_Pa
    delete ${worksrcpath}/src/data/amber_q/lps_ec
    xinstall -m 644 {*}[glob ${worksrcpath}/src/data/amber_q/*] ${destroot}${share}/nwchem/amber_q
    xinstall -d ${destroot}${share}/nwchem/amber_x
    xinstall -m 644 {*}[glob ${worksrcpath}/src/data/amber_x/*] ${destroot}${share}/nwchem/amber_x
    xinstall -d ${destroot}${share}/nwchem/amber_u
    xinstall -m 644 {*}[glob ${worksrcpath}/src/data/amber_u/*] ${destroot}${share}/nwchem/amber_u
    xinstall -d ${destroot}${share}/nwchem/solvents
    xinstall -m 644 {*}[glob ${worksrcpath}/src/data/solvents/*] ${destroot}${share}/nwchem/solvents
    xinstall -d ${destroot}${share}/nwchem/charmm_s
    xinstall -m 644 {*}[glob ${worksrcpath}/src/data/charmm_s/*] ${destroot}${share}/nwchem/charmm_s
    xinstall -d ${destroot}${share}/nwchem/charmm_x
    xinstall -m 644 {*}[glob ${worksrcpath}/src/data/charmm_x/*] ${destroot}${share}/nwchem/charmm_x
    system "echo nwchem_basis_library ${share}/nwchem/libraries/  > ${destroot}${prefix}/etc/nwchemrc"
    system "echo nwchem_nwpw_library ${share}/nwchem/libraryps/  >> ${destroot}${prefix}/etc/nwchemrc"
    system "echo ffield amber  >> ${destroot}${prefix}/etc/nwchemrc"
    system "echo amber_1 ${destroot}${share}/nwchem/amber_s/  >> ${destroot}${prefix}/etc/nwchemrc"
    system "echo amber_2 ${destroot}${share}/nwchem/amber_q/  >> ${destroot}${prefix}/etc/nwchemrc"
    system "echo amber_3 ${destroot}${share}/nwchem/amber_x/  >> ${destroot}${prefix}/etc/nwchemrc"
    system "echo amber_4 ${destroot}${share}/nwchem/amber_u/  >> ${destroot}${prefix}/etc/nwchemrc"
    system "echo spce ${destroot}${share}/nwchem/solvents/spce.rst  >> ${destroot}${prefix}/etc/nwchemrc"
    system "echo charmm_s ${destroot}${share}/nwchem/charmm_s/  >> ${destroot}${prefix}/etc/nwchemrc"
    system "echo charmm_x ${destroot}${share}/nwchem/charmm_x/  >> ${destroot}${prefix}/etc/nwchemrc"
}
